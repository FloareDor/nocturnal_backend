""" "init"

Revision ID: cc17dd31cf6d
Revises:
Create Date: 2024-09-10 07:33:51.015021

"""

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "cc17dd31cf6d"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("username", sa.String(), server_default="", nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.LargeBinary(), nullable=False),
        sa.Column("full_name", sa.String(), server_default="", nullable=False),
        sa.Column(
            "profile_picture_url",
            sa.String(),
            server_default="https://example.com/default-profile-picture.jpg",
            nullable=False,
        ),
        sa.Column(
            "role",
            sa.Enum("user", "bar_admin", "superuser", name="user_roles"),
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "bars",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=True, start=1, increment=1),
            nullable=False,
        ),
        sa.Column("admin_id", sa.UUID(), nullable=True),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("address", sa.String(length=255), nullable=True),
        sa.Column("phone", sa.String(length=20), nullable=False),
        sa.Column("image_url", sa.String(length=255), nullable=True),
        sa.Column("latitude", sa.DECIMAL(precision=10, scale=8), nullable=True),
        sa.Column("longitude", sa.DECIMAL(precision=11, scale=8), nullable=True),
        sa.Column("verified", sa.Boolean(), nullable=False),
        sa.Column("rating", sa.DECIMAL(precision=3, scale=2), nullable=True),
        sa.Column("rating_count", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("line_length", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column(
            "line_length_category",
            sa.Enum("small", "medium", "long", name="line_length_categories"),
            nullable=True,
        ),
        sa.Column("line_length_distribution", sa.ARRAY(sa.String()), nullable=True),
        sa.Column(
            "cover_category",
            sa.Enum("free", "cheap", "moderate", "expensive", name="cover_categories"),
            nullable=True,
        ),
        sa.Column("cover_category_distribution", sa.ARRAY(sa.String()), nullable=True),
        sa.Column("cover_price", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.ForeignKeyConstraint(["admin_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "bar_reports",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=True, start=1, increment=1),
            nullable=False,
        ),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("bar_id", sa.Integer(), nullable=False),
        sa.Column("line_length", sa.Integer(), nullable=True),
        sa.Column(
            "line_length_category",
            sa.Enum("small", "medium", "long", name="line_length_categories"),
            nullable=False,
        ),
        sa.Column("wait_time", sa.Integer(), nullable=True),
        sa.Column(
            "cover_category",
            sa.Enum("free", "cheap", "moderate", "expensive", name="cover_categories"),
            nullable=True,
        ),
        sa.Column("cover_price", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["bar_id"], ["bars.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "posts",
        sa.Column(
            "id",
            sa.Integer(),
            sa.Identity(always=True, start=1, increment=1),
            nullable=False,
        ),
        sa.Column("bar_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("content", sa.Text(), nullable=False),
        sa.Column("photo_url", sa.String(length=255), nullable=True),
        sa.Column(
            "post_type", sa.Enum("regular", "event", name="post_types"), nullable=False
        ),
        sa.Column("title", sa.String(length=100), nullable=True),
        sa.Column("event_datetime", sa.DateTime(timezone=True), nullable=True),
        sa.Column("cover_category", sa.String(length=50), nullable=True),
        sa.Column("cover_price", sa.DECIMAL(precision=10, scale=2), nullable=True),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(["bar_id"], ["bars.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id"),
    )
    op.create_table(
        "likes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["post_id"], ["posts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rsvps",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("post_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(["post_id"], ["posts.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rsvps")
    op.drop_table("likes")
    op.drop_table("posts")
    op.drop_table("bar_reports")
    op.drop_table("bars")
    op.drop_table("users")
    # ### end Alembic commands ###
